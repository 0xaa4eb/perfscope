/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContextSwitchesView implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Long machineId;
    private final Long time;
    private final Integer cpu;
    private final Integer pidOut;
    private final Integer tidOut;
    private final String commOut;
    private final Integer pidIn;
    private final Integer tidIn;
    private final String commIn;
    private final String flags;

    public ContextSwitchesView(ContextSwitchesView value) {
        this.id = value.id;
        this.machineId = value.machineId;
        this.time = value.time;
        this.cpu = value.cpu;
        this.pidOut = value.pidOut;
        this.tidOut = value.tidOut;
        this.commOut = value.commOut;
        this.pidIn = value.pidIn;
        this.tidIn = value.tidIn;
        this.commIn = value.commIn;
        this.flags = value.flags;
    }

    public ContextSwitchesView(
        Integer id,
        Long machineId,
        Long time,
        Integer cpu,
        Integer pidOut,
        Integer tidOut,
        String commOut,
        Integer pidIn,
        Integer tidIn,
        String commIn,
        String flags
    ) {
        this.id = id;
        this.machineId = machineId;
        this.time = time;
        this.cpu = cpu;
        this.pidOut = pidOut;
        this.tidOut = tidOut;
        this.commOut = commOut;
        this.pidIn = pidIn;
        this.tidIn = tidIn;
        this.commIn = commIn;
        this.flags = flags;
    }

    /**
     * Getter for <code>context_switches_view.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>context_switches_view.machine_id</code>.
     */
    public Long getMachineId() {
        return this.machineId;
    }

    /**
     * Getter for <code>context_switches_view.time</code>.
     */
    public Long getTime() {
        return this.time;
    }

    /**
     * Getter for <code>context_switches_view.cpu</code>.
     */
    public Integer getCpu() {
        return this.cpu;
    }

    /**
     * Getter for <code>context_switches_view.pid_out</code>.
     */
    public Integer getPidOut() {
        return this.pidOut;
    }

    /**
     * Getter for <code>context_switches_view.tid_out</code>.
     */
    public Integer getTidOut() {
        return this.tidOut;
    }

    /**
     * Getter for <code>context_switches_view.comm_out</code>.
     */
    public String getCommOut() {
        return this.commOut;
    }

    /**
     * Getter for <code>context_switches_view.pid_in</code>.
     */
    public Integer getPidIn() {
        return this.pidIn;
    }

    /**
     * Getter for <code>context_switches_view.tid_in</code>.
     */
    public Integer getTidIn() {
        return this.tidIn;
    }

    /**
     * Getter for <code>context_switches_view.comm_in</code>.
     */
    public String getCommIn() {
        return this.commIn;
    }

    /**
     * Getter for <code>context_switches_view.flags</code>.
     */
    public String getFlags() {
        return this.flags;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ContextSwitchesView other = (ContextSwitchesView) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.machineId == null) {
            if (other.machineId != null)
                return false;
        }
        else if (!this.machineId.equals(other.machineId))
            return false;
        if (this.time == null) {
            if (other.time != null)
                return false;
        }
        else if (!this.time.equals(other.time))
            return false;
        if (this.cpu == null) {
            if (other.cpu != null)
                return false;
        }
        else if (!this.cpu.equals(other.cpu))
            return false;
        if (this.pidOut == null) {
            if (other.pidOut != null)
                return false;
        }
        else if (!this.pidOut.equals(other.pidOut))
            return false;
        if (this.tidOut == null) {
            if (other.tidOut != null)
                return false;
        }
        else if (!this.tidOut.equals(other.tidOut))
            return false;
        if (this.commOut == null) {
            if (other.commOut != null)
                return false;
        }
        else if (!this.commOut.equals(other.commOut))
            return false;
        if (this.pidIn == null) {
            if (other.pidIn != null)
                return false;
        }
        else if (!this.pidIn.equals(other.pidIn))
            return false;
        if (this.tidIn == null) {
            if (other.tidIn != null)
                return false;
        }
        else if (!this.tidIn.equals(other.tidIn))
            return false;
        if (this.commIn == null) {
            if (other.commIn != null)
                return false;
        }
        else if (!this.commIn.equals(other.commIn))
            return false;
        if (this.flags == null) {
            if (other.flags != null)
                return false;
        }
        else if (!this.flags.equals(other.flags))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.machineId == null) ? 0 : this.machineId.hashCode());
        result = prime * result + ((this.time == null) ? 0 : this.time.hashCode());
        result = prime * result + ((this.cpu == null) ? 0 : this.cpu.hashCode());
        result = prime * result + ((this.pidOut == null) ? 0 : this.pidOut.hashCode());
        result = prime * result + ((this.tidOut == null) ? 0 : this.tidOut.hashCode());
        result = prime * result + ((this.commOut == null) ? 0 : this.commOut.hashCode());
        result = prime * result + ((this.pidIn == null) ? 0 : this.pidIn.hashCode());
        result = prime * result + ((this.tidIn == null) ? 0 : this.tidIn.hashCode());
        result = prime * result + ((this.commIn == null) ? 0 : this.commIn.hashCode());
        result = prime * result + ((this.flags == null) ? 0 : this.flags.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ContextSwitchesView (");

        sb.append(id);
        sb.append(", ").append(machineId);
        sb.append(", ").append(time);
        sb.append(", ").append(cpu);
        sb.append(", ").append(pidOut);
        sb.append(", ").append(tidOut);
        sb.append(", ").append(commOut);
        sb.append(", ").append(pidIn);
        sb.append(", ").append(tidIn);
        sb.append(", ").append(commIn);
        sb.append(", ").append(flags);

        sb.append(")");
        return sb.toString();
    }
}
