/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Calls implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Long threadId;
    private final Long commId;
    private final Long callPathId;
    private final Long callTime;
    private final Long returnTime;
    private final Long branchCount;
    private final Long callId;
    private final Long returnId;
    private final Long parentCallPathId;
    private final Integer flags;
    private final Long parentId;
    private final Long insnCount;
    private final Long cycCount;

    public Calls(Calls value) {
        this.id = value.id;
        this.threadId = value.threadId;
        this.commId = value.commId;
        this.callPathId = value.callPathId;
        this.callTime = value.callTime;
        this.returnTime = value.returnTime;
        this.branchCount = value.branchCount;
        this.callId = value.callId;
        this.returnId = value.returnId;
        this.parentCallPathId = value.parentCallPathId;
        this.flags = value.flags;
        this.parentId = value.parentId;
        this.insnCount = value.insnCount;
        this.cycCount = value.cycCount;
    }

    public Calls(
        Integer id,
        Long threadId,
        Long commId,
        Long callPathId,
        Long callTime,
        Long returnTime,
        Long branchCount,
        Long callId,
        Long returnId,
        Long parentCallPathId,
        Integer flags,
        Long parentId,
        Long insnCount,
        Long cycCount
    ) {
        this.id = id;
        this.threadId = threadId;
        this.commId = commId;
        this.callPathId = callPathId;
        this.callTime = callTime;
        this.returnTime = returnTime;
        this.branchCount = branchCount;
        this.callId = callId;
        this.returnId = returnId;
        this.parentCallPathId = parentCallPathId;
        this.flags = flags;
        this.parentId = parentId;
        this.insnCount = insnCount;
        this.cycCount = cycCount;
    }

    /**
     * Getter for <code>calls.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>calls.thread_id</code>.
     */
    public Long getThreadId() {
        return this.threadId;
    }

    /**
     * Getter for <code>calls.comm_id</code>.
     */
    public Long getCommId() {
        return this.commId;
    }

    /**
     * Getter for <code>calls.call_path_id</code>.
     */
    public Long getCallPathId() {
        return this.callPathId;
    }

    /**
     * Getter for <code>calls.call_time</code>.
     */
    public Long getCallTime() {
        return this.callTime;
    }

    /**
     * Getter for <code>calls.return_time</code>.
     */
    public Long getReturnTime() {
        return this.returnTime;
    }

    /**
     * Getter for <code>calls.branch_count</code>.
     */
    public Long getBranchCount() {
        return this.branchCount;
    }

    /**
     * Getter for <code>calls.call_id</code>.
     */
    public Long getCallId() {
        return this.callId;
    }

    /**
     * Getter for <code>calls.return_id</code>.
     */
    public Long getReturnId() {
        return this.returnId;
    }

    /**
     * Getter for <code>calls.parent_call_path_id</code>.
     */
    public Long getParentCallPathId() {
        return this.parentCallPathId;
    }

    /**
     * Getter for <code>calls.flags</code>.
     */
    public Integer getFlags() {
        return this.flags;
    }

    /**
     * Getter for <code>calls.parent_id</code>.
     */
    public Long getParentId() {
        return this.parentId;
    }

    /**
     * Getter for <code>calls.insn_count</code>.
     */
    public Long getInsnCount() {
        return this.insnCount;
    }

    /**
     * Getter for <code>calls.cyc_count</code>.
     */
    public Long getCycCount() {
        return this.cycCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Calls other = (Calls) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.threadId == null) {
            if (other.threadId != null)
                return false;
        }
        else if (!this.threadId.equals(other.threadId))
            return false;
        if (this.commId == null) {
            if (other.commId != null)
                return false;
        }
        else if (!this.commId.equals(other.commId))
            return false;
        if (this.callPathId == null) {
            if (other.callPathId != null)
                return false;
        }
        else if (!this.callPathId.equals(other.callPathId))
            return false;
        if (this.callTime == null) {
            if (other.callTime != null)
                return false;
        }
        else if (!this.callTime.equals(other.callTime))
            return false;
        if (this.returnTime == null) {
            if (other.returnTime != null)
                return false;
        }
        else if (!this.returnTime.equals(other.returnTime))
            return false;
        if (this.branchCount == null) {
            if (other.branchCount != null)
                return false;
        }
        else if (!this.branchCount.equals(other.branchCount))
            return false;
        if (this.callId == null) {
            if (other.callId != null)
                return false;
        }
        else if (!this.callId.equals(other.callId))
            return false;
        if (this.returnId == null) {
            if (other.returnId != null)
                return false;
        }
        else if (!this.returnId.equals(other.returnId))
            return false;
        if (this.parentCallPathId == null) {
            if (other.parentCallPathId != null)
                return false;
        }
        else if (!this.parentCallPathId.equals(other.parentCallPathId))
            return false;
        if (this.flags == null) {
            if (other.flags != null)
                return false;
        }
        else if (!this.flags.equals(other.flags))
            return false;
        if (this.parentId == null) {
            if (other.parentId != null)
                return false;
        }
        else if (!this.parentId.equals(other.parentId))
            return false;
        if (this.insnCount == null) {
            if (other.insnCount != null)
                return false;
        }
        else if (!this.insnCount.equals(other.insnCount))
            return false;
        if (this.cycCount == null) {
            if (other.cycCount != null)
                return false;
        }
        else if (!this.cycCount.equals(other.cycCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.threadId == null) ? 0 : this.threadId.hashCode());
        result = prime * result + ((this.commId == null) ? 0 : this.commId.hashCode());
        result = prime * result + ((this.callPathId == null) ? 0 : this.callPathId.hashCode());
        result = prime * result + ((this.callTime == null) ? 0 : this.callTime.hashCode());
        result = prime * result + ((this.returnTime == null) ? 0 : this.returnTime.hashCode());
        result = prime * result + ((this.branchCount == null) ? 0 : this.branchCount.hashCode());
        result = prime * result + ((this.callId == null) ? 0 : this.callId.hashCode());
        result = prime * result + ((this.returnId == null) ? 0 : this.returnId.hashCode());
        result = prime * result + ((this.parentCallPathId == null) ? 0 : this.parentCallPathId.hashCode());
        result = prime * result + ((this.flags == null) ? 0 : this.flags.hashCode());
        result = prime * result + ((this.parentId == null) ? 0 : this.parentId.hashCode());
        result = prime * result + ((this.insnCount == null) ? 0 : this.insnCount.hashCode());
        result = prime * result + ((this.cycCount == null) ? 0 : this.cycCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Calls (");

        sb.append(id);
        sb.append(", ").append(threadId);
        sb.append(", ").append(commId);
        sb.append(", ").append(callPathId);
        sb.append(", ").append(callTime);
        sb.append(", ").append(returnTime);
        sb.append(", ").append(branchCount);
        sb.append(", ").append(callId);
        sb.append(", ").append(returnId);
        sb.append(", ").append(parentCallPathId);
        sb.append(", ").append(flags);
        sb.append(", ").append(parentId);
        sb.append(", ").append(insnCount);
        sb.append(", ").append(cycCount);

        sb.append(")");
        return sb.toString();
    }
}
