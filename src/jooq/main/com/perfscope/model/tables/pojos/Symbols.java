/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Symbols implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Long dsoId;
    private final Long symStart;
    private final Long symEnd;
    private final Integer binding;
    private final String name;

    public Symbols(Symbols value) {
        this.id = value.id;
        this.dsoId = value.dsoId;
        this.symStart = value.symStart;
        this.symEnd = value.symEnd;
        this.binding = value.binding;
        this.name = value.name;
    }

    public Symbols(
        Integer id,
        Long dsoId,
        Long symStart,
        Long symEnd,
        Integer binding,
        String name
    ) {
        this.id = id;
        this.dsoId = dsoId;
        this.symStart = symStart;
        this.symEnd = symEnd;
        this.binding = binding;
        this.name = name;
    }

    /**
     * Getter for <code>symbols.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>symbols.dso_id</code>.
     */
    public Long getDsoId() {
        return this.dsoId;
    }

    /**
     * Getter for <code>symbols.sym_start</code>.
     */
    public Long getSymStart() {
        return this.symStart;
    }

    /**
     * Getter for <code>symbols.sym_end</code>.
     */
    public Long getSymEnd() {
        return this.symEnd;
    }

    /**
     * Getter for <code>symbols.binding</code>.
     */
    public Integer getBinding() {
        return this.binding;
    }

    /**
     * Getter for <code>symbols.name</code>.
     */
    public String getName() {
        return this.name;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Symbols other = (Symbols) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.dsoId == null) {
            if (other.dsoId != null)
                return false;
        }
        else if (!this.dsoId.equals(other.dsoId))
            return false;
        if (this.symStart == null) {
            if (other.symStart != null)
                return false;
        }
        else if (!this.symStart.equals(other.symStart))
            return false;
        if (this.symEnd == null) {
            if (other.symEnd != null)
                return false;
        }
        else if (!this.symEnd.equals(other.symEnd))
            return false;
        if (this.binding == null) {
            if (other.binding != null)
                return false;
        }
        else if (!this.binding.equals(other.binding))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.dsoId == null) ? 0 : this.dsoId.hashCode());
        result = prime * result + ((this.symStart == null) ? 0 : this.symStart.hashCode());
        result = prime * result + ((this.symEnd == null) ? 0 : this.symEnd.hashCode());
        result = prime * result + ((this.binding == null) ? 0 : this.binding.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Symbols (");

        sb.append(id);
        sb.append(", ").append(dsoId);
        sb.append(", ").append(symStart);
        sb.append(", ").append(symEnd);
        sb.append(", ").append(binding);
        sb.append(", ").append(name);

        sb.append(")");
        return sb.toString();
    }
}
