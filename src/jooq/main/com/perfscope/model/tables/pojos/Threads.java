/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Threads implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Long machineId;
    private final Long processId;
    private final Integer pid;
    private final Integer tid;

    public Threads(Threads value) {
        this.id = value.id;
        this.machineId = value.machineId;
        this.processId = value.processId;
        this.pid = value.pid;
        this.tid = value.tid;
    }

    public Threads(
        Integer id,
        Long machineId,
        Long processId,
        Integer pid,
        Integer tid
    ) {
        this.id = id;
        this.machineId = machineId;
        this.processId = processId;
        this.pid = pid;
        this.tid = tid;
    }

    /**
     * Getter for <code>threads.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>threads.machine_id</code>.
     */
    public Long getMachineId() {
        return this.machineId;
    }

    /**
     * Getter for <code>threads.process_id</code>.
     */
    public Long getProcessId() {
        return this.processId;
    }

    /**
     * Getter for <code>threads.pid</code>.
     */
    public Integer getPid() {
        return this.pid;
    }

    /**
     * Getter for <code>threads.tid</code>.
     */
    public Integer getTid() {
        return this.tid;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Threads other = (Threads) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.machineId == null) {
            if (other.machineId != null)
                return false;
        }
        else if (!this.machineId.equals(other.machineId))
            return false;
        if (this.processId == null) {
            if (other.processId != null)
                return false;
        }
        else if (!this.processId.equals(other.processId))
            return false;
        if (this.pid == null) {
            if (other.pid != null)
                return false;
        }
        else if (!this.pid.equals(other.pid))
            return false;
        if (this.tid == null) {
            if (other.tid != null)
                return false;
        }
        else if (!this.tid.equals(other.tid))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.machineId == null) ? 0 : this.machineId.hashCode());
        result = prime * result + ((this.processId == null) ? 0 : this.processId.hashCode());
        result = prime * result + ((this.pid == null) ? 0 : this.pid.hashCode());
        result = prime * result + ((this.tid == null) ? 0 : this.tid.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Threads (");

        sb.append(id);
        sb.append(", ").append(machineId);
        sb.append(", ").append(processId);
        sb.append(", ").append(pid);
        sb.append(", ").append(tid);

        sb.append(")");
        return sb.toString();
    }
}
