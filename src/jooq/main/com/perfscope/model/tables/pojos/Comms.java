/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Comms implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final String comm;
    private final Long cThreadId;
    private final Long cTime;
    private final Boolean execFlag;
    private final Boolean hasCalls;

    public Comms(Comms value) {
        this.id = value.id;
        this.comm = value.comm;
        this.cThreadId = value.cThreadId;
        this.cTime = value.cTime;
        this.execFlag = value.execFlag;
        this.hasCalls = value.hasCalls;
    }

    public Comms(
        Integer id,
        String comm,
        Long cThreadId,
        Long cTime,
        Boolean execFlag,
        Boolean hasCalls
    ) {
        this.id = id;
        this.comm = comm;
        this.cThreadId = cThreadId;
        this.cTime = cTime;
        this.execFlag = execFlag;
        this.hasCalls = hasCalls;
    }

    /**
     * Getter for <code>comms.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>comms.comm</code>.
     */
    public String getComm() {
        return this.comm;
    }

    /**
     * Getter for <code>comms.c_thread_id</code>.
     */
    public Long getCThreadId() {
        return this.cThreadId;
    }

    /**
     * Getter for <code>comms.c_time</code>.
     */
    public Long getCTime() {
        return this.cTime;
    }

    /**
     * Getter for <code>comms.exec_flag</code>.
     */
    public Boolean getExecFlag() {
        return this.execFlag;
    }

    /**
     * Getter for <code>comms.has_calls</code>.
     */
    public Boolean getHasCalls() {
        return this.hasCalls;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Comms other = (Comms) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.comm == null) {
            if (other.comm != null)
                return false;
        }
        else if (!this.comm.equals(other.comm))
            return false;
        if (this.cThreadId == null) {
            if (other.cThreadId != null)
                return false;
        }
        else if (!this.cThreadId.equals(other.cThreadId))
            return false;
        if (this.cTime == null) {
            if (other.cTime != null)
                return false;
        }
        else if (!this.cTime.equals(other.cTime))
            return false;
        if (this.execFlag == null) {
            if (other.execFlag != null)
                return false;
        }
        else if (!this.execFlag.equals(other.execFlag))
            return false;
        if (this.hasCalls == null) {
            if (other.hasCalls != null)
                return false;
        }
        else if (!this.hasCalls.equals(other.hasCalls))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.comm == null) ? 0 : this.comm.hashCode());
        result = prime * result + ((this.cThreadId == null) ? 0 : this.cThreadId.hashCode());
        result = prime * result + ((this.cTime == null) ? 0 : this.cTime.hashCode());
        result = prime * result + ((this.execFlag == null) ? 0 : this.execFlag.hashCode());
        result = prime * result + ((this.hasCalls == null) ? 0 : this.hasCalls.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Comms (");

        sb.append(id);
        sb.append(", ").append(comm);
        sb.append(", ").append(cThreadId);
        sb.append(", ").append(cTime);
        sb.append(", ").append(execFlag);
        sb.append(", ").append(hasCalls);

        sb.append(")");
        return sb.toString();
    }
}
