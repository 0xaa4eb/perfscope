/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CallPathsView implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Object ip;
    private final Long symbolId;
    private final String symbol;
    private final Long dsoId;
    private final String dsoShortName;
    private final Long parentId;
    private final Object parentIp;
    private final Long parentSymbolId;
    private final String parentSymbol;
    private final Long parentDsoId;
    private final String parentDsoShortName;

    public CallPathsView(CallPathsView value) {
        this.id = value.id;
        this.ip = value.ip;
        this.symbolId = value.symbolId;
        this.symbol = value.symbol;
        this.dsoId = value.dsoId;
        this.dsoShortName = value.dsoShortName;
        this.parentId = value.parentId;
        this.parentIp = value.parentIp;
        this.parentSymbolId = value.parentSymbolId;
        this.parentSymbol = value.parentSymbol;
        this.parentDsoId = value.parentDsoId;
        this.parentDsoShortName = value.parentDsoShortName;
    }

    public CallPathsView(
        Integer id,
        Object ip,
        Long symbolId,
        String symbol,
        Long dsoId,
        String dsoShortName,
        Long parentId,
        Object parentIp,
        Long parentSymbolId,
        String parentSymbol,
        Long parentDsoId,
        String parentDsoShortName
    ) {
        this.id = id;
        this.ip = ip;
        this.symbolId = symbolId;
        this.symbol = symbol;
        this.dsoId = dsoId;
        this.dsoShortName = dsoShortName;
        this.parentId = parentId;
        this.parentIp = parentIp;
        this.parentSymbolId = parentSymbolId;
        this.parentSymbol = parentSymbol;
        this.parentDsoId = parentDsoId;
        this.parentDsoShortName = parentDsoShortName;
    }

    /**
     * Getter for <code>call_paths_view.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getIp() {
        return this.ip;
    }

    /**
     * Getter for <code>call_paths_view.symbol_id</code>.
     */
    public Long getSymbolId() {
        return this.symbolId;
    }

    /**
     * Getter for <code>call_paths_view.symbol</code>.
     */
    public String getSymbol() {
        return this.symbol;
    }

    /**
     * Getter for <code>call_paths_view.dso_id</code>.
     */
    public Long getDsoId() {
        return this.dsoId;
    }

    /**
     * Getter for <code>call_paths_view.dso_short_name</code>.
     */
    public String getDsoShortName() {
        return this.dsoShortName;
    }

    /**
     * Getter for <code>call_paths_view.parent_id</code>.
     */
    public Long getParentId() {
        return this.parentId;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getParentIp() {
        return this.parentIp;
    }

    /**
     * Getter for <code>call_paths_view.parent_symbol_id</code>.
     */
    public Long getParentSymbolId() {
        return this.parentSymbolId;
    }

    /**
     * Getter for <code>call_paths_view.parent_symbol</code>.
     */
    public String getParentSymbol() {
        return this.parentSymbol;
    }

    /**
     * Getter for <code>call_paths_view.parent_dso_id</code>.
     */
    public Long getParentDsoId() {
        return this.parentDsoId;
    }

    /**
     * Getter for <code>call_paths_view.parent_dso_short_name</code>.
     */
    public String getParentDsoShortName() {
        return this.parentDsoShortName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CallPathsView other = (CallPathsView) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.ip == null) {
            if (other.ip != null)
                return false;
        }
        else if (!this.ip.equals(other.ip))
            return false;
        if (this.symbolId == null) {
            if (other.symbolId != null)
                return false;
        }
        else if (!this.symbolId.equals(other.symbolId))
            return false;
        if (this.symbol == null) {
            if (other.symbol != null)
                return false;
        }
        else if (!this.symbol.equals(other.symbol))
            return false;
        if (this.dsoId == null) {
            if (other.dsoId != null)
                return false;
        }
        else if (!this.dsoId.equals(other.dsoId))
            return false;
        if (this.dsoShortName == null) {
            if (other.dsoShortName != null)
                return false;
        }
        else if (!this.dsoShortName.equals(other.dsoShortName))
            return false;
        if (this.parentId == null) {
            if (other.parentId != null)
                return false;
        }
        else if (!this.parentId.equals(other.parentId))
            return false;
        if (this.parentIp == null) {
            if (other.parentIp != null)
                return false;
        }
        else if (!this.parentIp.equals(other.parentIp))
            return false;
        if (this.parentSymbolId == null) {
            if (other.parentSymbolId != null)
                return false;
        }
        else if (!this.parentSymbolId.equals(other.parentSymbolId))
            return false;
        if (this.parentSymbol == null) {
            if (other.parentSymbol != null)
                return false;
        }
        else if (!this.parentSymbol.equals(other.parentSymbol))
            return false;
        if (this.parentDsoId == null) {
            if (other.parentDsoId != null)
                return false;
        }
        else if (!this.parentDsoId.equals(other.parentDsoId))
            return false;
        if (this.parentDsoShortName == null) {
            if (other.parentDsoShortName != null)
                return false;
        }
        else if (!this.parentDsoShortName.equals(other.parentDsoShortName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.ip == null) ? 0 : this.ip.hashCode());
        result = prime * result + ((this.symbolId == null) ? 0 : this.symbolId.hashCode());
        result = prime * result + ((this.symbol == null) ? 0 : this.symbol.hashCode());
        result = prime * result + ((this.dsoId == null) ? 0 : this.dsoId.hashCode());
        result = prime * result + ((this.dsoShortName == null) ? 0 : this.dsoShortName.hashCode());
        result = prime * result + ((this.parentId == null) ? 0 : this.parentId.hashCode());
        result = prime * result + ((this.parentIp == null) ? 0 : this.parentIp.hashCode());
        result = prime * result + ((this.parentSymbolId == null) ? 0 : this.parentSymbolId.hashCode());
        result = prime * result + ((this.parentSymbol == null) ? 0 : this.parentSymbol.hashCode());
        result = prime * result + ((this.parentDsoId == null) ? 0 : this.parentDsoId.hashCode());
        result = prime * result + ((this.parentDsoShortName == null) ? 0 : this.parentDsoShortName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CallPathsView (");

        sb.append(id);
        sb.append(", ").append(ip);
        sb.append(", ").append(symbolId);
        sb.append(", ").append(symbol);
        sb.append(", ").append(dsoId);
        sb.append(", ").append(dsoShortName);
        sb.append(", ").append(parentId);
        sb.append(", ").append(parentIp);
        sb.append(", ").append(parentSymbolId);
        sb.append(", ").append(parentSymbol);
        sb.append(", ").append(parentDsoId);
        sb.append(", ").append(parentDsoShortName);

        sb.append(")");
        return sb.toString();
    }
}
