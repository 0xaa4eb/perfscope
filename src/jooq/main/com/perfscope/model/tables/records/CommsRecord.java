/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.records;


import com.tracelyp.model.tables.Comms;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommsRecord extends UpdatableRecordImpl<CommsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>comms.id</code>.
     */
    public CommsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>comms.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>comms.comm</code>.
     */
    public CommsRecord setComm(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>comms.comm</code>.
     */
    public String getComm() {
        return (String) get(1);
    }

    /**
     * Setter for <code>comms.c_thread_id</code>.
     */
    public CommsRecord setCThreadId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>comms.c_thread_id</code>.
     */
    public Long getCThreadId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>comms.c_time</code>.
     */
    public CommsRecord setCTime(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>comms.c_time</code>.
     */
    public Long getCTime() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>comms.exec_flag</code>.
     */
    public CommsRecord setExecFlag(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>comms.exec_flag</code>.
     */
    public Boolean getExecFlag() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>comms.has_calls</code>.
     */
    public CommsRecord setHasCalls(Boolean value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>comms.has_calls</code>.
     */
    public Boolean getHasCalls() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommsRecord
     */
    public CommsRecord() {
        super(Comms.COMMS);
    }

    /**
     * Create a detached, initialised CommsRecord
     */
    public CommsRecord(Integer id, String comm, Long cThreadId, Long cTime, Boolean execFlag, Boolean hasCalls) {
        super(Comms.COMMS);

        setId(id);
        setComm(comm);
        setCThreadId(cThreadId);
        setCTime(cTime);
        setExecFlag(execFlag);
        setHasCalls(hasCalls);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CommsRecord
     */
    public CommsRecord(com.tracelyp.model.tables.pojos.Comms value) {
        super(Comms.COMMS);

        if (value != null) {
            setId(value.getId());
            setComm(value.getComm());
            setCThreadId(value.getCThreadId());
            setCTime(value.getCTime());
            setExecFlag(value.getExecFlag());
            setHasCalls(value.getHasCalls());
            resetChangedOnNotNull();
        }
    }
}
