/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.records;


import com.tracelyp.model.tables.CallPathsView;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CallPathsViewRecord extends TableRecordImpl<CallPathsViewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>call_paths_view.id</code>.
     */
    public CallPathsViewRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public CallPathsViewRecord setIp(Object value) {
        set(1, value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getIp() {
        return get(1);
    }

    /**
     * Setter for <code>call_paths_view.symbol_id</code>.
     */
    public CallPathsViewRecord setSymbolId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.symbol_id</code>.
     */
    public Long getSymbolId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>call_paths_view.symbol</code>.
     */
    public CallPathsViewRecord setSymbol(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.symbol</code>.
     */
    public String getSymbol() {
        return (String) get(3);
    }

    /**
     * Setter for <code>call_paths_view.dso_id</code>.
     */
    public CallPathsViewRecord setDsoId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.dso_id</code>.
     */
    public Long getDsoId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>call_paths_view.dso_short_name</code>.
     */
    public CallPathsViewRecord setDsoShortName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.dso_short_name</code>.
     */
    public String getDsoShortName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>call_paths_view.parent_id</code>.
     */
    public CallPathsViewRecord setParentId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(6);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public CallPathsViewRecord setParentIp(Object value) {
        set(7, value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getParentIp() {
        return get(7);
    }

    /**
     * Setter for <code>call_paths_view.parent_symbol_id</code>.
     */
    public CallPathsViewRecord setParentSymbolId(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.parent_symbol_id</code>.
     */
    public Long getParentSymbolId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>call_paths_view.parent_symbol</code>.
     */
    public CallPathsViewRecord setParentSymbol(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.parent_symbol</code>.
     */
    public String getParentSymbol() {
        return (String) get(9);
    }

    /**
     * Setter for <code>call_paths_view.parent_dso_id</code>.
     */
    public CallPathsViewRecord setParentDsoId(Long value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.parent_dso_id</code>.
     */
    public Long getParentDsoId() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>call_paths_view.parent_dso_short_name</code>.
     */
    public CallPathsViewRecord setParentDsoShortName(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>call_paths_view.parent_dso_short_name</code>.
     */
    public String getParentDsoShortName() {
        return (String) get(11);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CallPathsViewRecord
     */
    public CallPathsViewRecord() {
        super(CallPathsView.CALL_PATHS_VIEW);
    }

    /**
     * Create a detached, initialised CallPathsViewRecord
     */
    public CallPathsViewRecord(Integer id, Object ip, Long symbolId, String symbol, Long dsoId, String dsoShortName, Long parentId, Object parentIp, Long parentSymbolId, String parentSymbol, Long parentDsoId, String parentDsoShortName) {
        super(CallPathsView.CALL_PATHS_VIEW);

        setId(id);
        setIp(ip);
        setSymbolId(symbolId);
        setSymbol(symbol);
        setDsoId(dsoId);
        setDsoShortName(dsoShortName);
        setParentId(parentId);
        setParentIp(parentIp);
        setParentSymbolId(parentSymbolId);
        setParentSymbol(parentSymbol);
        setParentDsoId(parentDsoId);
        setParentDsoShortName(parentDsoShortName);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CallPathsViewRecord
     */
    public CallPathsViewRecord(com.tracelyp.model.tables.pojos.CallPathsView value) {
        super(CallPathsView.CALL_PATHS_VIEW);

        if (value != null) {
            setId(value.getId());
            setIp(value.getIp());
            setSymbolId(value.getSymbolId());
            setSymbol(value.getSymbol());
            setDsoId(value.getDsoId());
            setDsoShortName(value.getDsoShortName());
            setParentId(value.getParentId());
            setParentIp(value.getParentIp());
            setParentSymbolId(value.getParentSymbolId());
            setParentSymbol(value.getParentSymbol());
            setParentDsoId(value.getParentDsoId());
            setParentDsoShortName(value.getParentDsoShortName());
            resetChangedOnNotNull();
        }
    }
}
