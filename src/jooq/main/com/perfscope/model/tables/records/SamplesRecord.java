/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model.tables.records;


import com.tracelyp.model.tables.Samples;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SamplesRecord extends UpdatableRecordImpl<SamplesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>samples.id</code>.
     */
    public SamplesRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>samples.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>samples.evsel_id</code>.
     */
    public SamplesRecord setEvselId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>samples.evsel_id</code>.
     */
    public Long getEvselId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>samples.machine_id</code>.
     */
    public SamplesRecord setMachineId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>samples.machine_id</code>.
     */
    public Long getMachineId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>samples.thread_id</code>.
     */
    public SamplesRecord setThreadId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>samples.thread_id</code>.
     */
    public Long getThreadId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>samples.comm_id</code>.
     */
    public SamplesRecord setCommId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>samples.comm_id</code>.
     */
    public Long getCommId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>samples.dso_id</code>.
     */
    public SamplesRecord setDsoId(Long value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>samples.dso_id</code>.
     */
    public Long getDsoId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>samples.symbol_id</code>.
     */
    public SamplesRecord setSymbolId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>samples.symbol_id</code>.
     */
    public Long getSymbolId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>samples.sym_offset</code>.
     */
    public SamplesRecord setSymOffset(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>samples.sym_offset</code>.
     */
    public Long getSymOffset() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>samples.ip</code>.
     */
    public SamplesRecord setIp(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>samples.ip</code>.
     */
    public Long getIp() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>samples.time</code>.
     */
    public SamplesRecord setTime(Long value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>samples.time</code>.
     */
    public Long getTime() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>samples.cpu</code>.
     */
    public SamplesRecord setCpu(Integer value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>samples.cpu</code>.
     */
    public Integer getCpu() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>samples.to_dso_id</code>.
     */
    public SamplesRecord setToDsoId(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>samples.to_dso_id</code>.
     */
    public Long getToDsoId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>samples.to_symbol_id</code>.
     */
    public SamplesRecord setToSymbolId(Long value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>samples.to_symbol_id</code>.
     */
    public Long getToSymbolId() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>samples.to_sym_offset</code>.
     */
    public SamplesRecord setToSymOffset(Long value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>samples.to_sym_offset</code>.
     */
    public Long getToSymOffset() {
        return (Long) get(13);
    }

    /**
     * Setter for <code>samples.to_ip</code>.
     */
    public SamplesRecord setToIp(Long value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>samples.to_ip</code>.
     */
    public Long getToIp() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>samples.branch_type</code>.
     */
    public SamplesRecord setBranchType(Integer value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>samples.branch_type</code>.
     */
    public Integer getBranchType() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>samples.in_tx</code>.
     */
    public SamplesRecord setInTx(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>samples.in_tx</code>.
     */
    public Boolean getInTx() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>samples.call_path_id</code>.
     */
    public SamplesRecord setCallPathId(Long value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>samples.call_path_id</code>.
     */
    public Long getCallPathId() {
        return (Long) get(17);
    }

    /**
     * Setter for <code>samples.insn_count</code>.
     */
    public SamplesRecord setInsnCount(Long value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>samples.insn_count</code>.
     */
    public Long getInsnCount() {
        return (Long) get(18);
    }

    /**
     * Setter for <code>samples.cyc_count</code>.
     */
    public SamplesRecord setCycCount(Long value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>samples.cyc_count</code>.
     */
    public Long getCycCount() {
        return (Long) get(19);
    }

    /**
     * Setter for <code>samples.flags</code>.
     */
    public SamplesRecord setFlags(Integer value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>samples.flags</code>.
     */
    public Integer getFlags() {
        return (Integer) get(20);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SamplesRecord
     */
    public SamplesRecord() {
        super(Samples.SAMPLES);
    }

    /**
     * Create a detached, initialised SamplesRecord
     */
    public SamplesRecord(Integer id, Long evselId, Long machineId, Long threadId, Long commId, Long dsoId, Long symbolId, Long symOffset, Long ip, Long time, Integer cpu, Long toDsoId, Long toSymbolId, Long toSymOffset, Long toIp, Integer branchType, Boolean inTx, Long callPathId, Long insnCount, Long cycCount, Integer flags) {
        super(Samples.SAMPLES);

        setId(id);
        setEvselId(evselId);
        setMachineId(machineId);
        setThreadId(threadId);
        setCommId(commId);
        setDsoId(dsoId);
        setSymbolId(symbolId);
        setSymOffset(symOffset);
        setIp(ip);
        setTime(time);
        setCpu(cpu);
        setToDsoId(toDsoId);
        setToSymbolId(toSymbolId);
        setToSymOffset(toSymOffset);
        setToIp(toIp);
        setBranchType(branchType);
        setInTx(inTx);
        setCallPathId(callPathId);
        setInsnCount(insnCount);
        setCycCount(cycCount);
        setFlags(flags);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SamplesRecord
     */
    public SamplesRecord(com.tracelyp.model.tables.pojos.Samples value) {
        super(Samples.SAMPLES);

        if (value != null) {
            setId(value.getId());
            setEvselId(value.getEvselId());
            setMachineId(value.getMachineId());
            setThreadId(value.getThreadId());
            setCommId(value.getCommId());
            setDsoId(value.getDsoId());
            setSymbolId(value.getSymbolId());
            setSymOffset(value.getSymOffset());
            setIp(value.getIp());
            setTime(value.getTime());
            setCpu(value.getCpu());
            setToDsoId(value.getToDsoId());
            setToSymbolId(value.getToSymbolId());
            setToSymOffset(value.getToSymOffset());
            setToIp(value.getToIp());
            setBranchType(value.getBranchType());
            setInTx(value.getInTx());
            setCallPathId(value.getCallPathId());
            setInsnCount(value.getInsnCount());
            setCycCount(value.getCycCount());
            setFlags(value.getFlags());
            resetChangedOnNotNull();
        }
    }
}
