/*
 * This file is generated by jOOQ.
 */
package com.tracelyp.model;


import com.tracelyp.model.tables.BranchTypes;
import com.tracelyp.model.tables.CallPaths;
import com.tracelyp.model.tables.Calls;
import com.tracelyp.model.tables.Cbr;
import com.tracelyp.model.tables.CommThreads;
import com.tracelyp.model.tables.Comms;
import com.tracelyp.model.tables.ContextSwitches;
import com.tracelyp.model.tables.Dsos;
import com.tracelyp.model.tables.Machines;
import com.tracelyp.model.tables.Samples;
import com.tracelyp.model.tables.SelectedEvents;
import com.tracelyp.model.tables.Symbols;
import com.tracelyp.model.tables.Threads;
import com.tracelyp.model.tables.records.BranchTypesRecord;
import com.tracelyp.model.tables.records.CallPathsRecord;
import com.tracelyp.model.tables.records.CallsRecord;
import com.tracelyp.model.tables.records.CbrRecord;
import com.tracelyp.model.tables.records.CommThreadsRecord;
import com.tracelyp.model.tables.records.CommsRecord;
import com.tracelyp.model.tables.records.ContextSwitchesRecord;
import com.tracelyp.model.tables.records.DsosRecord;
import com.tracelyp.model.tables.records.MachinesRecord;
import com.tracelyp.model.tables.records.SamplesRecord;
import com.tracelyp.model.tables.records.SelectedEventsRecord;
import com.tracelyp.model.tables.records.SymbolsRecord;
import com.tracelyp.model.tables.records.ThreadsRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BranchTypesRecord> BRANCH_TYPES__PK_BRANCH_TYPES = Internal.createUniqueKey(BranchTypes.BRANCH_TYPES, DSL.name("pk_branch_types"), new TableField[] { BranchTypes.BRANCH_TYPES.ID }, true);
    public static final UniqueKey<CallPathsRecord> CALL_PATHS__PK_CALL_PATHS = Internal.createUniqueKey(CallPaths.CALL_PATHS, DSL.name("pk_call_paths"), new TableField[] { CallPaths.CALL_PATHS.ID }, true);
    public static final UniqueKey<CallsRecord> CALLS__PK_CALLS = Internal.createUniqueKey(Calls.CALLS, DSL.name("pk_calls"), new TableField[] { Calls.CALLS.ID }, true);
    public static final UniqueKey<CbrRecord> CBR__PK_CBR = Internal.createUniqueKey(Cbr.CBR, DSL.name("pk_cbr"), new TableField[] { Cbr.CBR.ID }, true);
    public static final UniqueKey<CommThreadsRecord> COMM_THREADS__PK_COMM_THREADS = Internal.createUniqueKey(CommThreads.COMM_THREADS, DSL.name("pk_comm_threads"), new TableField[] { CommThreads.COMM_THREADS.ID }, true);
    public static final UniqueKey<CommsRecord> COMMS__PK_COMMS = Internal.createUniqueKey(Comms.COMMS, DSL.name("pk_comms"), new TableField[] { Comms.COMMS.ID }, true);
    public static final UniqueKey<ContextSwitchesRecord> CONTEXT_SWITCHES__PK_CONTEXT_SWITCHES = Internal.createUniqueKey(ContextSwitches.CONTEXT_SWITCHES, DSL.name("pk_context_switches"), new TableField[] { ContextSwitches.CONTEXT_SWITCHES.ID }, true);
    public static final UniqueKey<DsosRecord> DSOS__PK_DSOS = Internal.createUniqueKey(Dsos.DSOS, DSL.name("pk_dsos"), new TableField[] { Dsos.DSOS.ID }, true);
    public static final UniqueKey<MachinesRecord> MACHINES__PK_MACHINES = Internal.createUniqueKey(Machines.MACHINES, DSL.name("pk_machines"), new TableField[] { Machines.MACHINES.ID }, true);
    public static final UniqueKey<SamplesRecord> SAMPLES__PK_SAMPLES = Internal.createUniqueKey(Samples.SAMPLES, DSL.name("pk_samples"), new TableField[] { Samples.SAMPLES.ID }, true);
    public static final UniqueKey<SelectedEventsRecord> SELECTED_EVENTS__PK_SELECTED_EVENTS = Internal.createUniqueKey(SelectedEvents.SELECTED_EVENTS, DSL.name("pk_selected_events"), new TableField[] { SelectedEvents.SELECTED_EVENTS.ID }, true);
    public static final UniqueKey<SymbolsRecord> SYMBOLS__PK_SYMBOLS = Internal.createUniqueKey(Symbols.SYMBOLS, DSL.name("pk_symbols"), new TableField[] { Symbols.SYMBOLS.ID }, true);
    public static final UniqueKey<ThreadsRecord> THREADS__PK_THREADS = Internal.createUniqueKey(Threads.THREADS, DSL.name("pk_threads"), new TableField[] { Threads.THREADS.ID }, true);
}
