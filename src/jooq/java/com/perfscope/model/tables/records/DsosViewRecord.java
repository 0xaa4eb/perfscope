/*
 * This file is generated by jOOQ.
 */
package com.perfscope.model.tables.records;


import com.perfscope.model.tables.DsosView;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DsosViewRecord extends TableRecordImpl<DsosViewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>dsos_view.id</code>.
     */
    public DsosViewRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>dsos_view.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>dsos_view.machine_id</code>.
     */
    public DsosViewRecord setMachineId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>dsos_view.machine_id</code>.
     */
    public Long getMachineId() {
        return (Long) get(1);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public DsosViewRecord setHostOrGuest(Object value) {
        set(2, value);
        return this;
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getHostOrGuest() {
        return get(2);
    }

    /**
     * Setter for <code>dsos_view.short_name</code>.
     */
    public DsosViewRecord setShortName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>dsos_view.short_name</code>.
     */
    public String getShortName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>dsos_view.long_name</code>.
     */
    public DsosViewRecord setLongName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>dsos_view.long_name</code>.
     */
    public String getLongName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>dsos_view.build_id</code>.
     */
    public DsosViewRecord setBuildId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>dsos_view.build_id</code>.
     */
    public String getBuildId() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DsosViewRecord
     */
    public DsosViewRecord() {
        super(DsosView.DSOS_VIEW);
    }

    /**
     * Create a detached, initialised DsosViewRecord
     */
    public DsosViewRecord(Integer id, Long machineId, Object hostOrGuest, String shortName, String longName, String buildId) {
        super(DsosView.DSOS_VIEW);

        setId(id);
        setMachineId(machineId);
        setHostOrGuest(hostOrGuest);
        setShortName(shortName);
        setLongName(longName);
        setBuildId(buildId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DsosViewRecord
     */
    public DsosViewRecord(com.perfscope.model.tables.pojos.DsosView value) {
        super(DsosView.DSOS_VIEW);

        if (value != null) {
            setId(value.getId());
            setMachineId(value.getMachineId());
            setHostOrGuest(value.getHostOrGuest());
            setShortName(value.getShortName());
            setLongName(value.getLongName());
            setBuildId(value.getBuildId());
            resetChangedOnNotNull();
        }
    }
}
